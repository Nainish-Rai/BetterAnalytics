generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Website {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  url         String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  trackingId  String   @unique
  pageViews   PageView[]
  events      Event[]
  sessions    Session[]
}

model PageView {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  websiteId   String   @db.ObjectId
  website     Website  @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  path        String
  referrer    String?
  userAgent   String?
  duration    Int?
  createdAt   DateTime @default(now())
  sessionId   String?  @db.ObjectId
  session     Session? @relation(fields: [sessionId], references: [id])
}

model Event {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  websiteId   String   @db.ObjectId
  website     Website  @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  name        String
  payload     Json?
  createdAt   DateTime @default(now())
  sessionId   String?  @db.ObjectId
  session     Session? @relation(fields: [sessionId], references: [id])
}

model Session {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  websiteId   String    @db.ObjectId
  website     Website   @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  startedAt   DateTime  @default(now())
  endedAt     DateTime?
  duration    Int?
  pageViews   PageView[]
  events      Event[]
  country     String?
  city        String?
  device      String?
  browser     String?
  os          String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}